#!/usr/bin/env bash

#  Copyright 2012-2016 Stanislav Senotrusov <stan@senotrusov.com>
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

set -o xtrace
set -o nounset

. tools.sh
. data-pi/lib.sh
. ubuntu/lib.sh
. netdata/lib.sh

data-pi::ensure-this-is-raspberry-pi || { echo "Function call failed (${?})" >&2; exit 1; }

data-pi::install-motd || { echo "Function call failed (${?})" >&2; exit 1; }
data-pi::install-led-heartbeat || { echo "Function call failed (${?})" >&2; exit 1; }

data-pi::apt::add-ubuntu-raspi2-ppa || { echo "Function call failed (${?})" >&2; exit 1; }

ubuntu::set-hostname "stan-data-pi" || { echo "Function call failed (${?})" >&2; exit 1; }
ubuntu::set-timezone UTC || { echo "Function call failed (${?})" >&2; exit 1; }
ubuntu::set-locale en_US.UTF-8 || { echo "Function call failed (${?})" >&2; exit 1; }

ubuntu::install-my-computer-deploy-shell-alias || { echo "Function call failed (${?})" >&2; exit 1; }
ubuntu::set-inotify-max-user-watches || { echo "Function call failed (${?})" >&2; exit 1; }

ubuntu::apt::update || { echo "Function call failed (${?})" >&2; exit 1; }
ubuntu::apt::dist-upgrade || { echo "Function call failed (${?})" >&2; exit 1; }

ubuntu::apt::install-basic-tools || { echo "Function call failed (${?})" >&2; exit 1; }

data-pi::apt::install-packages || { echo "Function call failed (${?})" >&2; exit 1; }

netdata::install || { echo "Function call failed (${?})" >&2; exit 1; }
netdata::configure || { echo "Function call failed (${?})" >&2; exit 1; }

ubuntu::apt::autoremove || { echo "Function call failed (${?})" >&2; exit 1; }
